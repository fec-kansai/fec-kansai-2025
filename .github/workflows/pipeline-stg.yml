name: Chekck Stage Build
on:
  push:
    branches:
      - staging
  pull_request:
    branches:
      - staging

env:
  BASE_URL: ${{ vars.NEXT_PUBLIC_BASE_URL }}
  GTAG_ID: ${{ vars.NEXT_PUBLIC_GTAG_ID }}

jobs:
  CheckUIBuild:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check UI Build
        uses: ./.github/actions/check-ui-build
        with:
          next-public-base-url: ${{ env.BASE_URL }}
          next-public-gtag-id: ${{ env.GTAG_ID }}

  # Storybook Build と VRT - タイムアウト対策を含む
  CheckStoryBookBuild:
    runs-on: ubuntu-latest
    timeout-minutes: 15 # ジョブ全体のタイムアウトを設定
    permissions:
      pull-requests: write
      issues: write
      contents: write
      actions: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check Storybook Build
        uses: ./.github/actions/check-storybook-build
        timeout-minutes: 10 # Storybookビルドのタイムアウト

      - name: Compare Screenshots
        uses: ./.github/actions/composite-screenshots/compare-screenshots
        with:
          github: ${{ toJson(github) }}
        timeout-minutes: 5 # VRT比較のタイムアウト

      - name: Cleanup processes (if any)
        if: always()
        run: |
          pkill -f "http-server" || true
          pkill -f "storycap" || true
          pkill -f "storybook" || true

  Deploy:
    runs-on: ubuntu-latest
    needs: [CheckUIBuild, CheckStoryBookBuild] # Storybookビルドも依存関係に追加
    if: success()
    steps:
      - name: Make Deploy Directory
        shell: bash
        run: |
          ls -la
          mkdir -p ./_deploy

      - name: Download UI Artifacts
        uses: actions/download-artifact@v4
        with:
          name: ui-build-artifact
          path: ./_deploy

      - name: Download Storybook Artifacts
        uses: actions/download-artifact@v4
        with:
          name: storybook-build-artifact
          path: ./_deploy/storybook

      - name: Download VRT Artifacts
        uses: actions/download-artifact@v4
        with:
          name: vrt-report-artifact
          path: ./_deploy/${{github.head_ref}}/vrt-report

      - name: Check Merged Artifacts
        shell: bash
        run: |
          ls -la ./_deploy

      - name: Publish to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./_deploy --project-name=fec-kansai-2025 --commit-dirty=true --branch=staging
